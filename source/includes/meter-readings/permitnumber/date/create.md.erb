## Create a Meter Reading

```shell
curl "<%= config[:endpoint] %>/api/meter-readings/63209-FP/2022-06" \\
  -X POST \\
  -d { \\
      "flowMeter": { \\
        "value": "150" \\
      } \\
    }

```

```javascript
const axios = require("axios");

const options = {
  method: "POST",
  url: "<%= config[:endpoint] %>/api/meter-readings/63209-FP/2022-06",
  data: {
    flowMeter: {
      value: 150,
    },
  },
};

axios
  .request(options)
  .then((response) => {
    console.log(response.data);
  })
  .catch((error) => {
    console.error(error);
  });
```

> The above command returns JSON structured like this:

```json
{
  "date": "2022-06",
  "permitNumber": "63209-FP",
  "flowMeter": {
    "value": "150"
  }
}
```

This endpoint creates a new meter reading.

The record to be created should be sent in the body of the request.

<aside class="notice">
  Successful creation of a meter reading will create meter readings for the other eleven months in the specified calendar year.  These records will be populated with date and permitNumber only.  
</aside>

<aside class="notice">
  If a record already exists that matches the permitNumber and date of the request body - a "400 BadRequest" error will be returned.
</aside>

### HTTP Request

`POST /api/meter-readings/{permitNumber}/{date}`

### URL Parameters

| Parameter    | Type   | Restrictions | Description                               |
| ------------ | ------ | ------------ | ----------------------------------------- |
| permitNumber | string | required     | A string matching the well permit number. |
| date         | string | required     | A string formatted 'YYYY-MM'.             |

### Body Properties

Expected structure of the body is described here: [Meter Reading Properties](#meter-reading-properties)

<aside class="notice">
  If the permitNumber or date properties are specified in the body, they will be overwritten by the permitNumber and date properties specified in the url.  There is no need to specify these properties in the body.
</aside>
